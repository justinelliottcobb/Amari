name: Deploy Examples Suite

on:
  push:
    branches:
      - main
      - master
    paths:
      - 'examples-suite/**'
  pull_request:
    branches:
      - main
      - master
    paths:
      - 'examples-suite/**'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/examples-suite

jobs:
  test:
    name: Test Examples Suite
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./examples-suite

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: examples-suite/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run type check
        run: npm run typecheck

      - name: Run tests
        run: npm run test --if-present

      - name: Build application
        run: npm run build

  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    defaults:
      run:
        working-directory: ./examples-suite

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./examples-suite
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy-netlify:
    name: Deploy to Netlify
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || github.ref == 'refs/heads/feature/api-examples-suite')
    defaults:
      run:
        working-directory: ./examples-suite

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: examples-suite/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build for Netlify
        run: npm run build
        env:
          NODE_ENV: production

      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v2.0
        with:
          publish-dir: './examples-suite/build/client'
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions - ${{ github.event.head_commit.message }}"
          enable-pull-request-comment: true
          enable-commit-comment: true
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  deploy-staging:
    name: Deploy to Staging (Docker)
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment: staging

    steps:
      - name: Deploy to staging environment
        run: |
          echo "Deploying to staging..."
          # This would contain actual deployment commands
          # For example: kubectl, docker-compose, or platform-specific deployment
          echo "Deployment completed successfully"

  deploy-production:
    name: Deploy to Production (Docker)
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    environment: production

    steps:
      - name: Deploy to production environment
        run: |
          echo "Deploying to production..."
          # This would contain actual production deployment commands
          echo "Production deployment completed successfully"

  health-check:
    name: Health Check
    runs-on: ubuntu-latest
    needs: [deploy-netlify, deploy-staging, deploy-production]
    if: always() && (needs.deploy-netlify.result == 'success' || needs.deploy-staging.result == 'success' || needs.deploy-production.result == 'success')

    steps:
      - name: Wait for deployment
        run: sleep 30

      - name: Health check
        run: |
          echo "Running health checks..."
          # Add actual health check commands here
          # For Netlify: curl check against the deployed URL
          # For Docker: container health checks
          echo "Health checks passed"